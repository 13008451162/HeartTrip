plugins {
    id 'com.android.library'
}
def cfg = rootProject.ext
android {
    namespace 'com.example.libbase'
    compileSdk cfg.android.compileSdkVersion

    defaultConfig {
        minSdk cfg.android.minSdkVersion
        targetSdk cfg.android.targetSdkVersion

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"

        //让java代码也可以使用isModule
        buildConfigField("boolean","isModule",String.valueOf(isModule))
    }

    //让java代码自动生成系统的BuildConfig
    buildFeatures {
        buildConfig true
    }


    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    api cfg.libARouter//ARouter依赖
    api cfg.libImmersionbar//引入沉浸式布局依赖
    api cfg.libXui   //引入UI库
    api cfg.libCodeLocator   //引入字节工具集
    api cfg.dependencies.retrofit2
    api cfg.dependencies.retrofit2gson
    api cfg.dependencies.glide
    api cfg.dependencies.appintro //引导页工具
    api cfg.dependencies.cicleimagview //圆形ImageView 用户头像
    api cfg.dependencies.gson //引入GSON
    api cfg.dependencies.swiperecyclerview//滑动recycler
    api cfg.dependencies.AndroidAutoSize//屏幕适配
    api cfg.dependencies.eventbus //EventBus
    api cfg.libXXPermissions    //权限请求框架



    // 依赖lancet-all, 则包含所有lancet能力
    debugImplementation "com.bytedance.tools.codelocator:codelocator-lancet-all:2.0.3"

    // 使用 for 循环添加 xuidependencies 中的依赖项
    for (def dependency in xuidependencies) {
        api dependency.value
    }

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}